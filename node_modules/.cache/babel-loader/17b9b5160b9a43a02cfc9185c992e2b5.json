{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn-Web-roamap\\\\Learn-react\\\\netflex-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchURL,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      console.log(request.data.results);\n      setMovies(request.data.results); // console.log(fetchURL)\n\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["D:/Learn-Web-roamap/Learn-react/netflex-clone/src/Row.js"],"names":["React","useState","useEffect","axios","baseURL","Row","title","fetchURL","isLargeRow","movies","setMovies","fetchData","request","get","console","log","data","results","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAmB,SAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,OAAO,GAAG,sCAAhB;;AAEA,SAASC,GAAT,OAA2C;AAAA;;AAAA,MAA9B;AAACC,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA;AAAjB,GAA8B;AAEvC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAAR,CAAaC,OAAzB;AACAP,MAAAA,SAAS,CAACE,OAAO,CAACI,IAAR,CAAaC,OAAd,CAAT,CAHsB,CAItB;;AACA,aAAOL,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACJ,QAAD,CATM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKG,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACb;AAAK,QAAA,SAAS,EAAG,cAAaX,UAAU,IAAI,iBAAkB,EAA9D;AAEA,QAAA,GAAG,EAAG,GAAEJ,OAAQ,GAAEI,UAAU,GAAGW,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAFvE;AAE0E,QAAA,GAAG,EAAEF,KAAK,CAACG;AAFrF,SACKH,KAAK,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1BQlB,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport axios  from './axios';\r\nimport './Row.css';\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title,fetchURL, isLargeRow}) {\r\n    \r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchURL);\r\n            console.log(request.data.results);\r\n            setMovies(request.data.results);\r\n            // console.log(fetchURL)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchURL])\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n            <div className='row_posters'>\r\n                {movies.map(movie => (\r\n                    <img className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    key={movie.id}\r\n                    src={`${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}