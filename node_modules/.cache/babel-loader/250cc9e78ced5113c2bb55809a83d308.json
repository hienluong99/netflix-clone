{"ast":null,"code":"import _asyncToGenerator from\"D:\\\\Learn-Web-roamap\\\\Learn-react\\\\netflex-clone\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"D:\\\\Learn-Web-roamap\\\\Learn-react\\\\netflex-clone\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\Learn-Web-roamap\\\\Learn-react\\\\netflex-clone\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import axios from'./axios';import'./Row.css';import Youtube from'react-youtube';import movieTrailer from'movie-trailer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var baseURL=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchURL=_ref.fetchURL,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchURL);case 2:request=_context.sent;console.log(request.data.results);setMovies(request.data.results);// console.log(fetchURL)\nreturn _context.abrupt(\"return\",request);case 6:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchURL]);var opts={heigth:'300',width:'100%',playerVars:{autoPlay:1}};var handleClick=function handleClick(movie){if(trailerUrl){setTrailerUrl('');}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||\"\").then(function(url){var urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get('v'));}).catch(function(error){return console.log(error);});}console.log(\"click\",trailerUrl);};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row_posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},className:\"row_poster \".concat(isLargeRow&&\"row_posterLarge\"),src:\"\".concat(baseURL).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(Youtube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["D:/Learn-Web-roamap/Learn-react/netflex-clone/src/Row.js"],"names":["React","useState","useEffect","axios","Youtube","movieTrailer","baseURL","Row","title","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","console","log","data","results","opts","heigth","width","playerVars","autoPlay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","id"],"mappings":"saAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,KAAP,KAAmB,SAAnB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,sCAAhB,CAEA,QAASC,CAAAA,GAAT,MAA2C,IAA7BC,CAAAA,KAA6B,MAA7BA,KAA6B,CAAvBC,QAAuB,MAAvBA,QAAuB,CAAbC,UAAa,MAAbA,UAAa,CAEvC,cAA4BT,QAAQ,CAAC,EAAD,CAApC,wCAAOU,MAAP,eAAeC,SAAf,eACA,eAAoCX,QAAQ,CAAC,EAAD,CAA5C,yCAAOY,UAAP,eAAmBC,aAAnB,eAEAZ,SAAS,CAAC,UAAM,SACGa,CAAAA,SADH,qIACZ,qKAC0BZ,CAAAA,KAAK,CAACa,GAAN,CAAUP,QAAV,CAD1B,QACUQ,OADV,eAEIC,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAAR,CAAaC,OAAzB,EACAT,SAAS,CAACK,OAAO,CAACG,IAAR,CAAaC,OAAd,CAAT,CACA;AAJJ,gCAKWJ,OALX,wDADY,4CAQZF,SAAS,GACZ,CATQ,CASN,CAACN,QAAD,CATM,CAAT,CAWA,GAAMa,CAAAA,IAAI,CAAG,CACTC,MAAM,CAAE,KADC,CAETC,KAAK,CAAE,MAFE,CAGTC,UAAU,CAAE,CACRC,QAAQ,CAAE,CADF,CAHH,CAAb,CAQA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAS,CAEzB,GAAGf,UAAH,CAAc,CACVC,aAAa,CAAC,EAAD,CAAb,CACH,CAFD,IAEK,CACDT,YAAY,CAAC,CAAAuB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEC,IAAP,GAAe,EAAhB,CAAZ,CACKC,IADL,CACU,SAACC,GAAD,CAAQ,CACV,GAAMC,CAAAA,SAAS,CAAE,GAAIC,CAAAA,eAAJ,CAAoB,GAAIC,CAAAA,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAjB,CAEArB,aAAa,CAACkB,SAAS,CAAChB,GAAV,CAAc,GAAd,CAAD,CAAb,CACH,CALL,EAMKoB,KANL,CAMW,SAACC,KAAD,QAAUnB,CAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ,CAAV,EANX,EAOH,CACDnB,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAoBN,UAApB,EACH,CAdD,CAgBA,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKL,KAAL,EADJ,cAEI,YAAK,SAAS,CAAC,aAAf,UACKG,MAAM,CAAC2B,GAAP,CAAW,SAAAV,KAAK,qBACb,YAAK,OAAO,CAAE,yBAAMD,CAAAA,WAAW,CAACC,KAAD,CAAjB,EAAd,CACA,SAAS,sBAAgBlB,UAAU,EAAI,iBAA9B,CADT,CAGA,GAAG,WAAKJ,OAAL,SAAeI,UAAU,CAAGkB,KAAK,CAACW,WAAT,CAAuBX,KAAK,CAACY,aAAtD,CAHH,CAG0E,GAAG,CAAEZ,KAAK,CAACC,IAHrF,EAEKD,KAAK,CAACa,EAFX,CADa,EAAhB,CADL,EAFJ,CAUK5B,UAAU,eAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,CAA8B,IAAI,CAAES,IAApC,EAVnB,GADJ,CAcH,CAED,cAAef,CAAAA,GAAf","sourcesContent":["import React, { useState ,useEffect} from 'react'\r\nimport axios  from './axios';\r\nimport './Row.css';\r\nimport Youtube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title,fetchURL, isLargeRow}) {\r\n    \r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchURL);\r\n            console.log(request.data.results);\r\n            setMovies(request.data.results);\r\n            // console.log(fetchURL)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchURL])\r\n\r\n    const opts = {\r\n        heigth: '300',\r\n        width: '100%',\r\n        playerVars: {\r\n            autoPlay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie)=>{\r\n        \r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n                .then((url) =>{\r\n                    const urlParams =new URLSearchParams(new URL(url).search);\r\n                    \r\n                    setTrailerUrl(urlParams.get('v'))\r\n                }) \r\n                .catch((error)=> console.log(error))\r\n        }\r\n        console.log(\"click\",trailerUrl)\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2>{title}</h2>\r\n            <div className='row_posters'>\r\n                {movies.map(movie => (\r\n                    <img onClick={() => handleClick(movie)} \r\n                    className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                    key={movie.id}\r\n                    src={`${baseURL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}